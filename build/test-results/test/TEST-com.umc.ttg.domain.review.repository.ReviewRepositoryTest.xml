<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.umc.ttg.domain.review.repository.ReviewRepositoryTest" tests="6" skipped="0" failures="0" errors="0" timestamp="2024-10-03T04:51:39" hostname="onam-uiui-MacBookAir.local" time="0.055">
  <properties/>
  <testcase name="findByStoreAndMember_는_데이터가_없으면_Optional_empty_를_내려준다()" classname="com.umc.ttg.domain.review.repository.ReviewRepositoryTest" time="0.015"/>
  <testcase name="findAllByMemberId_로_리뷰_데이터를_찾아올_수_있다()" classname="com.umc.ttg.domain.review.repository.ReviewRepositoryTest" time="0.005"/>
  <testcase name="findByStoreIdAndMemberId_로_리뷰_데이터를_찾아올_수_있다()" classname="com.umc.ttg.domain.review.repository.ReviewRepositoryTest" time="0.005"/>
  <testcase name="findAllByMemberId_는_리뷰_데이터가_없으면_빈_리스트를_반환한다()" classname="com.umc.ttg.domain.review.repository.ReviewRepositoryTest" time="0.007"/>
  <testcase name="findByStoreIdAndMemberId_는_리뷰_데이터가_없으면_Optional_Empty_를_반환한다()" classname="com.umc.ttg.domain.review.repository.ReviewRepositoryTest" time="0.011"/>
  <testcase name="findByStoreAndMember_로_리뷰_데이터를_찾을_수_있다()" classname="com.umc.ttg.domain.review.repository.ReviewRepositoryTest" time="0.007"/>
  <system-out><![CDATA[2024-10-03T13:51:39.879+09:00  INFO 45404 --- [    Test worker] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [com.umc.ttg.domain.review.repository.ReviewRepositoryTest]: ReviewRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2024-10-03T13:51:39.887+09:00  INFO 45404 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration com.umc.ttg.TtgApplication for test class com.umc.ttg.domain.review.repository.ReviewRepositoryTest
Hibernate: 
    select
        se1_0.id,
        se1_0.address,
        se1_0.created_at,
        se1_0.hot_yn,
        se1_0.image,
        se1_0.menu_id,
        se1_0.modify_at,
        se1_0.name,
        se1_0.place_info,
        se1_0.region_id,
        se1_0.review_count,
        se1_0.review_span,
        se1_0.sale_info,
        se1_0.service_info,
        se1_0.spon_info,
        se1_0.sub_title,
        se1_0.title,
        se1_0.use_info 
    from
        store se1_0 
    where
        se1_0.id=?
Hibernate: 
    select
        me1_0.id,
        me1_0.benefit_count,
        me1_0.created_at,
        me1_0.modify_at,
        me1_0.name,
        me1_0.nickname,
        me1_0.password,
        me1_0.phone_num,
        me1_0.profile_image,
        me1_0.role,
        me1_0.type 
    from
        member me1_0 
    where
        me1_0.id=?
Hibernate: 
    select
        re1_0.id,
        re1_0.apply_date,
        re1_0.created_at,
        re1_0.member_id,
        re1_0.modify_at,
        re1_0.reason,
        re1_0.review_link,
        re1_0.status,
        re1_0.store_id 
    from
        review re1_0 
    where
        re1_0.store_id=? 
        and re1_0.member_id=?
Hibernate: 
    select
        re1_0.id,
        re1_0.apply_date,
        re1_0.created_at,
        re1_0.member_id,
        re1_0.modify_at,
        re1_0.reason,
        re1_0.review_link,
        re1_0.status,
        re1_0.store_id 
    from
        review re1_0 
    left join
        member m1_0 
            on m1_0.id=re1_0.member_id 
    where
        m1_0.id=?
Hibernate: 
    select
        re1_0.id,
        re1_0.apply_date,
        re1_0.created_at,
        re1_0.member_id,
        re1_0.modify_at,
        re1_0.reason,
        re1_0.review_link,
        re1_0.status,
        re1_0.store_id 
    from
        review re1_0 
    left join
        store s1_0 
            on s1_0.id=re1_0.store_id 
    left join
        member m1_0 
            on m1_0.id=re1_0.member_id 
    where
        s1_0.id=? 
        and m1_0.id=?
Hibernate: 
    select
        re1_0.id,
        re1_0.apply_date,
        re1_0.created_at,
        re1_0.member_id,
        re1_0.modify_at,
        re1_0.reason,
        re1_0.review_link,
        re1_0.status,
        re1_0.store_id 
    from
        review re1_0 
    left join
        member m1_0 
            on m1_0.id=re1_0.member_id 
    where
        m1_0.id=?
Hibernate: 
    select
        re1_0.id,
        re1_0.apply_date,
        re1_0.created_at,
        re1_0.member_id,
        re1_0.modify_at,
        re1_0.reason,
        re1_0.review_link,
        re1_0.status,
        re1_0.store_id 
    from
        review re1_0 
    left join
        store s1_0 
            on s1_0.id=re1_0.store_id 
    left join
        member m1_0 
            on m1_0.id=re1_0.member_id 
    where
        s1_0.id=? 
        and m1_0.id=?
Hibernate: 
    select
        se1_0.id,
        se1_0.address,
        se1_0.created_at,
        se1_0.hot_yn,
        se1_0.image,
        se1_0.menu_id,
        se1_0.modify_at,
        se1_0.name,
        se1_0.place_info,
        se1_0.region_id,
        se1_0.review_count,
        se1_0.review_span,
        se1_0.sale_info,
        se1_0.service_info,
        se1_0.spon_info,
        se1_0.sub_title,
        se1_0.title,
        se1_0.use_info 
    from
        store se1_0 
    where
        se1_0.id=?
Hibernate: 
    select
        me1_0.id,
        me1_0.benefit_count,
        me1_0.created_at,
        me1_0.modify_at,
        me1_0.name,
        me1_0.nickname,
        me1_0.password,
        me1_0.phone_num,
        me1_0.profile_image,
        me1_0.role,
        me1_0.type 
    from
        member me1_0 
    where
        me1_0.id=?
Hibernate: 
    select
        re1_0.id,
        re1_0.apply_date,
        re1_0.created_at,
        re1_0.member_id,
        re1_0.modify_at,
        re1_0.reason,
        re1_0.review_link,
        re1_0.status,
        re1_0.store_id 
    from
        review re1_0 
    where
        re1_0.store_id=? 
        and re1_0.member_id=?
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
